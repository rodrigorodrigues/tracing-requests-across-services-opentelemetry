[SERVICE]
    Flush        1
    Daemon       Off
    Parsers_File custom_parsers.conf
    Log_Level   ${FLB_LOG_LEVEL}
#    HTTP_Server On
#    HTTP_Listen 0.0.0.0
#    HTTP_Port 24224

[INPUT]
    Name        forward
    Listen      0.0.0.0
    Port        24224

[INPUT]
    Name        tail
    Path        ${LOG_PATH}
    #multiline.parser docker, cri
    Tag *
    Mem_Buf_Limit 5MB
    Log_Level   ${FLB_LOG_LEVEL}

#[FILTER]
#    Name multiline
#    Match *
#    multiline.key_content log
#    multiline.parser supertest
#    Log_Level   ${FLB_LOG_LEVEL}

[FILTER]
    Name     parser
    Match    *
    Key_Name msg
    Parser   parser
    Preserve_Key On
    Reserve_Data On
    Log_Level   ${FLB_LOG_LEVEL}

#[FILTER]
#    Name rewrite_tag
#    Match *.log
#    Rule log "^.*$" $log false
#    Emitter_Name re_emitted_indexing

#[FILTER]
#    Name          rewrite_tag
#    Match         test_tag
#    Rule          $trace_id ^(fluent)$  from.$TAG.new.$tool.$sub['s1']['s2'].out false
#    Emitter_Name  re_emitted

[OUTPUT]
    Name stdout
    Match *

# [FILTER]
#     Name   parser
#     Parser json
#     Match  *
#     Reserve_Data On
#     #Reserve_Key On
#     Key_Name log #Not sure if this is necessary??
#     Merge_Log  on
#     Merge_Log_Key log_processed
#    Logical_Op or
#    Regex  log X-B3-TraceId="(.*?)"
#    Regex  log \\"x-b3-traceid\\":\\"(.*?)\\"
#    Regex  log "trace_id":"(.*?)"
#    Regex  log traceID=(\w+)
#     Log_Level   ${FLB_LOG_LEVEL}
[Output]
    Name forward
    Match *
    host ${HOST}
    port ${PORT}

#[OUTPUT]
#    Name                 opentelemetry
#    Match                *
#    Host                 ${HOST}
#    Port                 ${PORT}
#    Metrics_uri          /v1/metrics
#    Logs_uri             /v1/logs
#    Traces_uri           /v1/traces
#    Log_response_payload True
#    Tls                  Off
#    Tls.verify           Off
#    # add user-defined labels
#    add_label            job fluent-bit
#    add_label            color blue
#    Log_Level            ${FLB_LOG_LEVEL}
