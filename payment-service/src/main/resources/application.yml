spring:
  application:
    name: payment-service-spring-boot
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}

  jackson:
    default-property-inclusion: non_empty
    serialization:
      write-bigdecimal-as-plain: true
      write-dates-as-timestamps: false
  kafka:
    consumer:
      properties:
        enable.auto.commit: false
        allow.auto.create.topics: true
        specific.avro.reader: true
      group-id: payment-service
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
    properties:
      schema.registry.url: ${SCHEMA_REGISTRY_URL:http://localhost:8081}
      allow.auto.create.topics: true
      specific.avro.reader: true
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    bootstrap-servers: ${KAFKA_URL:localhost:9092}

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,logfile
  tracing:
    propagation:
      produce: b3, w3c, b3_multi
      consume: b3, w3c, b3_multi
    baggage:
      remote-fields: requestId
      correlation:
        fields: requestId
    sampling:
      probability: 1.0
  otlp:
    metrics:
      export:
        url: ${OTLP_URL:http://localhost:4318}/v1/metrics
    tracing:
      endpoint: ${OTLP_URL:http://localhost:4318}/v1/traces
  opentelemetry:
    resource-attributes:
      "service.name": ${spring.application.name}
      "app_name": ${spring.application.name}
  metrics:
    distribution:
      percentiles-histogram:
        http.server.requests: true
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_ENDPOINT:http://localhost:9411}/api/v2/spans
logging:
  pattern:
    level: "%5p [serviceName='${spring.application.name:}-spring-boot',traceID=%X{traceId:-},spanID=%X{spanId:-},requestId='%X{requestId:-}']"

server:
  error:
    include-binding-errors: always
    include-stacktrace: always
    include-message: always

---
spring:
  config:
    activate:
      on-profile: logfile

logging:
  file:
    name: /tmp/${spring.application.name}.log

  logback:
    rollingpolicy:
      max-history: 5
